{"version":3,"sources":["app/scripts/album.js","app/scripts/app.js","app/scripts/collection.js","app/scripts/landing.js","app/scripts/profile.js"],"names":[],"mappingstlWA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAtEA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAnBA;AAAA;CCAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAlBA;AAAA","file":"public/javascripts/app.js","sourcesContent":["\n// Another Example Album\nvar albumMarconi = {\n\tname: 'The Telephone',\n\tartist: 'Guglielmo Marconi',\n\tlabel: 'EM',\n\tyear: '1909',\n\talbumArtUrl: '/images/album-placeholder.png',\n\tsongs: [\n\t\t{ name: 'Hello, Operator?', length: '1:01' },\n\t\t{ name: 'Ring, ring, ring', length: '5:01' },\n\t\t{ name: 'Fits in your pocket', length: '3:21' },\n\t\t{ name: 'Can you hear me now?', length: '3:14' },\n\t\t{ name: 'Wrong phone number', length: '2:15' }\n\t]\n};\n\n// Third Example Album\nvar albumMixtape = {\n\tname: 'Rap Mixtape',\n\tartist: 'Various',\n\tlabel: 'ME',\n\tyear: '2014',\n\talbumArtUrl: '/images/album-placeholder.png',\n\tsongs: [\n\t\t{ name: 'No Diggity', length: '3:29' },\n\t\t{ name: 'Bubble Butt', length: '3:49' },\n\t\t{ name: 'Don\\'t Touch Me', length: '3:34' },\n\t\t{ name: 'Booty Swing', length: '3:17' },\n\t\t{ name: 'Knockout', length: '4:09' }\n\t]\n};\n\nvar currentlyPlayingSong = null;\n\nfunction createSongRow(songNumber, songName, songLength) {\n\tvar template =\n\t\t\t'<tr>'\n\t\t+ '  <td class=\"song-number col-md-1\" data-song-number=\"' + songNumber + '\">' + songNumber + '</td>'\n\t\t+ '  <td class=\"col-md-9\">' + songName + '</td>'\n\t\t+ '  <td class=\"col-md-2\">' + songLength + '</td>'\n\t\t+ '</tr>'\n\t\t;\n\n\t// Instead of returning row immediately, attach hover functionality to it first\n\tvar $row = $(template);\n\n\tvar onHover = function(event) {\n\t\tvar songNumberCell = $(this).find('.song-number');\n\t\tvar songNumber = songNumberCell.data('song-number');\n\t\tif (songNumber !== currentlyPlayingSong) {\n\t\t\tsongNumberCell.html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n\t\t}\n\t};\n\n\tvar offHover = function(event) {\n\t\tvar songNumberCell = $(this).find('.song-number');\n\t\tvar songNumber = songNumberCell.data('song-number');\n\t\tif (songNumber !== currentlyPlayingSong) {\n\t\t\tsongNumberCell.html(songNumber);\n\t\t}\n\t};\n\n\t// Toggle the play, pause, and song number based on the button clicked\n\tvar clickHandler = function(event) {\n\t\tvar songNumber = $(this).data('song-number');\n\n\t\t// if ( a song is playing ) {\n\t\t//   // Stop playing current song\n\t\t//   // Replace stopped song button with number\n\t\t// }\n\n\t\t// if ( a non-playing song was clicked ) {\n\t\t//   // A Play icon will be showing because of hover\n\t\t//   // Switch from Play -> Pause to indicate new song is playing\n\t\t//   // Set the current song to the one clicked\n\t\t// }\n\t\t// else if ( the playing song was clicked ) {\n\t\t//   // Switch from Pause -> Play for current song to indicate pausing\n\t\t//   // Set the current song to null\n\t\t// }\n\n\t\tif (currentlyPlayingSong !== null) {\n\t\t\t// Revert to song number for currently playing song because user started playing new song\n\t\t\tvar currentlyPlayingCell = $('.song-number[data-song-number=\"' + currentlyPlayingSong + '\"]');\n\t\t\tcurrentlyPlayingCell.html(currentlyPlayingSong);\n\t\t}\n\n\t\tif (currentlyPlayingSong !== songNumber) {\n\t\t\t// Switch from Play -> Pause button to indicate new song is playing\n\t\t\t$(this).html('<a class=\"album-song-button\"><i class=\"fa fa-pause\"></i></a>');\n\t\t\tcurrentlyPlayingSong = songNumber;\n\t\t}\n\t\telse if (currentlyPlayingSong === songNumber) {\n\t\t\t// Switch from Pause -> Play button to pause currently playing song\n\t\t\t$(this).html('<a class=\"album-song-button\"><i class=\"fa fa-play\"></i></a>');\n\t\t\tcurrentlyPlayingSong = null;\n\t\t}\n\n\t};\n\n\t$row.find('.song-number').click(clickHandler);\n\t$row.hover(onHover, offHover);\n\treturn $row;\n};\n\nfunction changeAlbumView(album) {\n\t// Update the album title\n\tvar $albumTitle = $('.album-title');\n\t$albumTitle.text(album.name);\n\n\t// Update the album artist\n\tvar $albumArtist = $('.album-artist');\n\t$albumArtist.text(album.artist);\n\n\t// Update the meta information\n\tvar $albumMeta = $('.album-meta-info');\n\t$albumMeta.text(album.year + \" on \" + album.label);\n\n\t// Update the album image\n\tvar $albumImage = $('.album-image img');\n\t$albumImage.attr('src', album.albumArtUrl);\n\n\t// Update the song list\n\tvar $songList = $('.album-song-listing');\n\t$songList.empty();\n\tvar songs = album.songs;\n\tfor (var i = 0; i < songs.length; i++) {\n\t\tvar songData = songs[i];\n\t\tvar $newRow = createSongRow(i + 1, songData.name, songData.length);\n\t\t$songList.append($newRow);\n\t}\n\n};\n\n\n// Seekbar control with mouse\nfunction updateSeekPercentage($seekBar, event) {\n\tvar barWidth = $seekBar.width();\n\tvar offsetX = event.pageX - $seekBar.offset().left; // get mouse x offset here\n\n\tvar offsetXPercent = (offsetX / barWidth) * 100;\n\toffsetXPercent = Math.max(0, offsetXPercent);\n\toffsetXPercent = Math.min(100, offsetXPercent);\n\n\tvar percentageString = offsetXPercent + '%';\n\t$seekBar.find('.fill').width(percentageString);\n\t$seekBar.find('.thumb').css({left: percentageString});\n};\n\n// Attach seek bar updates to mouse events on bars\nfunction setupSeekBars() {\n\t$seekBars = $('.player-bar .seek-bar');\n\t$seekBars.click(function(event) {\n\t\tupdateSeekPercentage($(this), event);\n\t});\n\n\t$seekBars.find('.thumb').mousedown(function(event) {\n\t\tvar $seekBar = $(this).parent();\n\n\t\t$seekBar.addClass('no-animate');\n\n\t\t$('.player-bar').bind('mousemove.thumb', function(event) {\n\t\t\tupdateSeekPercentage($seekBar, event);\n\t\t});\n\n\t\t// cleanup\n\t\t$('.player-bar').bind('mouseup.thumb', function() {\n\t\t\t$seekBar.removeClass('no-animate');\n\t\t\t$('.player-bar').unbind('mousemove.thumb');\n\t\t\t$('.player-bar').unbind('mouseup.thumb');\n\t\t});\n\t});\n};\n\n// This 'if' condition is used to prevent the jQuery modifications\n// from happening on non-Album view pages.\n// - Use a regex to validate that the url has \"/album\" in its path.\nif (document.URL.match(/\\/album.html/)) {\n// Wait until the HTML is fully processed\n\t$(document).ready(function() {\n\n\t\tchangeAlbumView(albumPicasso);\n\n\t\t$('.col-md-3').click(function() {\n\t\t\tchangeAlbumView(albumMixtape);\n\t\t});\n\n\t\tsetupSeekBars();\n\n\t\t// track mouse movements\n\t\t// $(document).mousemove(function(e) {\n\t\t// \tvar coordX = e.pageX;\n\t\t// \tvar coordY = e.pageY;\n\t\t// \tconsole.log(\"(\" + coordX + \" , \" + coordY + \")\");\n\t\t// });\n\n\t});\n};","// includes landing.js code\n// require('./landing');\n// require('./collection');\n// require('./album');\n// require('./profile');\n\n// Example Album\nvar albumPicasso = {\n  name: 'The Colors',\n  artist: 'Pablo Picasso',\n  label: 'Cubism',\n  year: '1881',\n  albumArtUrl: '/images/album-placeholder.png',\n  songs: [\n    { name: 'Blue', length: '163.38', audioUrl: '/music/placeholders/blue' },\n    { name: 'Green', length: '105.66', audioUrl: '/music/placeholders/green' },\n    { name: 'Red', length: '270.14', audioUrl: '/music/placeholders/red' },\n    { name: 'Pink', length: '154.81', audioUrl: '/music/placeholders/pink' },\n    { name: 'Magenta', length: '375.92', audioUrl: '/music/placeholders/magenta' }\n  ]\n};\n\n// App declaration including ui-router\nblocJams = angular.module('BlocJams', ['ui.router']);\n\n// Providers: services used by Angular modules to configure or define default behaviour for certain module\nblocJams.config(['$stateProvider', '$locationProvider', function($stateProvider, $locationProvider) {\n  // tells app we want to configure states to match plain routes\n  $locationProvider.html5Mode(true);\n\n  // configures state definitions using ui-router\n  // .state() takes two arguments: name of state, object that defines specific properties of state\n  $stateProvider.state('landing', {\n    url: '/',\n    controller: 'Landing.controller',\n    templateUrl: '/templates/landing.html'\n  });\n\n  $stateProvider.state('collection', {\n    url: '/collection',\n    controller: 'Collection.controller',\n    templateUrl: '/templates/collection.html'\n  });\n\n  $stateProvider.state('album', {\n    url: '/album',\n    controller: 'Album.controller',\n    templateUrl: '/templates/album.html'\n  });\n}]);\n\n// Cleaner way to call the controller than crowding it on the module definition\nblocJams.controller('Landing.controller', ['$scope', function($scope) {\n  $scope.mainTitle = 'Bloc Jams';\n  $scope.subText = 'Turn the music up!';\n\n    $scope.subTextClicked = function() {\n      $scope.subText += '!';\n    };\n\n    $scope.albumURLs = [\n      '/images/album-placeholders/album-1.jpg',\n      '/images/album-placeholders/album-2.jpg',\n      '/images/album-placeholders/album-3.jpg',\n      '/images/album-placeholders/album-4.jpg',\n      '/images/album-placeholders/album-5.jpg',\n      '/images/album-placeholders/album-6.jpg',\n      '/images/album-placeholders/album-7.jpg',\n      '/images/album-placeholders/album-8.jpg',\n      '/images/album-placeholders/album-9.jpg',\n    ];\n}]);\n\nblocJams.controller('Collection.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.albums = [];\n    for (var i = 0; i < 33; i++) {\n      $scope.albums.push(angular.copy(albumPicasso));\n    };\n\n  $scope.playAlbum = function(album) {\n    SongPlayer.setSong(album, album.songs[0]); // Targets first song in the array.\n  };\n}]);\n\nblocJams.controller('Album.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.album = angular.copy(albumPicasso);\n\n  var hoveredSong = null;\n\n  $scope.onHoverSong = function(song) {\n    hoveredSong = song;\n  };\n\n  $scope.offHoverSong = function(song) {\n    hoveredSong = null;\n  };\n\n  $scope.getSongState = function(song) {\n    if (song === SongPlayer.currentSong && SongPlayer.playing) {\n      return 'playing';\n    }\n    else if (song === hoveredSong) {\n      return 'hovered';\n    }\n    return 'default';\n  };\n\n  $scope.playSong = function(song) {\n    SongPlayer.setSong($scope.album, song);\n  };\n\n  $scope.pauseSong = function(song) {\n    SongPlayer.pause();\n  };\n}]);\n\nblocJams.controller('PlayerBar.controller', ['$scope', 'SongPlayer', function($scope, SongPlayer) {\n  $scope.songPlayer = SongPlayer;\n\n  $scope.volumeClass = function() {\n    return {\n      'fa-volume-off': SongPlayer.volume == 0,\n      'fa-volume-down': SongPlayer.volume <= 70 && SongPlayer.volume > 0,\n      'fa-volume-up': SongPlayer.volume > 70\n    }\n  }\n\n  $scope.muteToggle = function(volume) {\n    var startVolume = SongPlayer.volume;\n    console.log(startVolume);\n\n    if (startVolume > 0) {\n      SongPlayer.previousVolume = startVolume;\n      SongPlayer.mute();\n    }\n    else {\n      SongPlayer.volume = SongPlayer.previousVolume;\n      SongPlayer.setVolume(SongPlayer.volume);\n    }\n  }\n\n  SongPlayer.onTimeUpdate(function(event, time) {\n    $scope.$apply(function() {\n      $scope.playTime = time;\n    });\n  });\n\n\n}]);\n\nblocJams.service('SongPlayer', ['$rootScope', function($rootScope) {\n  var currentSoundFile = null;\n\n  function trackIndex(album, song) {\n    return album.songs.indexOf(song);\n  };\n\n  return {\n    currentSong: null,\n    currentAlbum: null,\n    playing: false,\n    volume:90,\n\n    play: function() {\n      this.playing = true;\n      currentSoundFile.play();\n    },\n    pause: function() {\n      this.playing = false;\n      currentSoundFile.pause();\n    },\n    next: function() {\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n      currentTrackIndex++;\n      if (currentTrackIndex >= this.currentAlbum.songs.length) {\n        currentTrackIndex = 0;\n      };\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n    },\n    previous: function() {\n      var currentTrackIndex = trackIndex(this.currentAlbum, this.currentSong);\n      currentTrackIndex--;\n      if (currentTrackIndex < 0) {\n        currentTrackIndex = this.currentAlbum.songs.length - 1;\n      };\n      var song = this.currentAlbum.songs[currentTrackIndex];\n      this.setSong(this.currentAlbum, song);\n    },\n    mute: function(volume) {\n      if (volume > 0) {\n        SongPlayer.volume == 0;\n      }\n      this.volume = 0;\n    },\n    seek: function(time) {\n      // Checks to make sure that a sound file is playing before seeking\n      if (currentSoundFile) {\n        // Uses a Buzz method to set the time of the song\n        currentSoundFile.setTime(time);\n      }\n    },\n    onTimeUpdate: function(callback) {\n      return $rootScope.$on('sound:timeupdate', callback);\n    },\n    setVolume: function(volume) {\n      if (currentSoundFile) {\n        currentSoundFile.setVolume(volume);\n      }\n      this.volume = volume;\n    },\n    setSong: function(album, song) {\n      if (currentSoundFile) {\n        currentSoundFile.stop();\n      };\n      this.currentAlbum = album;\n      this.currentSong = song;\n\n      currentSoundFile = new buzz.sound(song.audioUrl, {\n        formats: [ \"mp3\" ],\n        preload: true\n      });\n\n      currentSoundFile.bind('timeupdate', function(e) {\n        $rootScope.$broadcast('sound:timeupdate', this.getTime());\n      });\n\n      this.play();\n    }\n  };\n}]);\n\nblocJams.directive('slider', ['$document', function($document){\n\n  // Returns a number between 0 and 1 to determine where the mouse event happened along the slider bar.\n  var calculateSliderPercentFromMouseEvent = function($slider, event) {\n    var offsetX =  event.pageX - $slider.offset().left; // Distance from left\n    var sliderWidth = $slider.width(); // Width of slider\n    var offsetXPercent = (offsetX  / sliderWidth);\n    offsetXPercent = Math.max(0, offsetXPercent);\n    offsetXPercent = Math.min(1, offsetXPercent);\n    return offsetXPercent;\n  };\n\n  var numberFromValue = function(value, defaultValue) {\n    if (typeof value === 'number') {\n      return value;\n    }\n\n    if (typeof value === 'undefined') {\n      return defaultValue;\n    }\n\n    if (typeof value === 'string') {\n      return Number(value);\n    }\n  }\n\n  return {\n    templateUrl: '/templates/directives/slider.html',\n    replace: true,\n    restrict: 'E',\n    // creates a scope that exists only in this directive\n    scope: {\n      onChange: '&'\n    },\n    link: function(scope, element, attributes) {\n      // these values represent the progress into the song/volume bar, and its max value\n      // for now, supplying arbitrary initial and max values\n      scope.value = 0;\n      scope.max = 100;\n      var $seekBar = $(element);\n\n      // console.log(attributes);\n      attributes.$observe('value', function(newValue) {\n        scope.value = numberFromValue(newValue, 0);\n      });\n\n      attributes.$observe('max', function(newValue) {\n        scope.max = numberFromValue(newValue, 100) || 100;\n      });\n\n      var percentString = function() {\n        var value = scope.value || 0;\n        var max = scope.max || 100;\n        percent = value / max * 100;\n        return percent + \"%\";\n      };\n\n      scope.fillStyle = function() {\n        return {width: percentString()};\n      };\n\n      scope.thumbStyle = function() {\n        return {left: percentString()};\n      };\n\n      scope.onClickSlider = function(event) {\n        var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n        scope.value = percent * scope.max;\n        notifyCallback(scope.value);\n      };\n\n      scope.trackThumb = function() {\n        $document.bind('mousemove.thumb', function(event){\n          var percent = calculateSliderPercentFromMouseEvent($seekBar, event);\n          scope.$apply(function(){\n            scope.value = percent * scope.max;\n            notifyCallback(scope.value);\n          });\n        });\n\n        //cleanup\n        $document.bind('mouseup.thumb', function(){\n          $document.unbind('mousemove.thumb');\n          $document.unbind('mouseup.thumb');\n        });\n      }\n\n      // handle changes caused by function passed into on-change\n      var notifyCallback = function(newValue) {\n        if (typeof scope.onChange === 'function') {\n          scope.onChange({value: newValue});\n        }\n      };\n    }\n  }\n}]);\n\n// filter definition to show time progression in minutes and seconds\nblocJams.filter('timecode', function() {\n  return function(seconds) {\n    seconds = Number.parseFloat(seconds);\n\n    // returned when no time is provided\n    if (Number.isNaN(seconds)) {\n      return '-:--';\n    }\n\n    // make it a whole number\n    var wholeSeconds = Math.floor(seconds);\n    var minutes = Math.floor(wholeSeconds / 60);\n    remainingSeconds = wholeSeconds % 60;\n    var output = minutes + ':';\n\n    // zero pad seconds, so 9 seconds should be :09\n    if (remainingSeconds < 10) {\n      output += '0';\n    }\n\n    output += remainingSeconds;\n\n    return output;\n  }\n})","function buildAlbumThumbnail() {\n  var template =\n      '<div class=\"collection-album-container col-md-2\">'\n    + '  <div class=\"collection-album-image-container\">'\n    + '    <img src=\"/images/album-placeholder.png\"/>'\n    + '  </div>'\n    + '  <div class=\"caption album-collection-info\">'\n    + '    <p>'\n    + '      <a class=\"album-name\" href=\"/album.html\"> Album Name </a>'\n    + '      <br/>'\n    + '      <a href=\"/album.html\"> Artist name </a>'\n    + '      <br/>'\n    + '      X songs'\n    + '      <br/>'\n    + '      X:XX Total Length'\n    + '      <br/>'\n    + '    </p>'\n    + '  </div>'\n    + '</div>';\n\n return $(template);\n};\n\nfunction buildAlbumOverlay(albumURL) {\n  var template =\n      '<div class=\"collection-album-image-overlay\">'\n    + ' <div class=\"collection-overlay-content\">'\n    + '   <a class=\"collection-overlay-button\" ng-click=\"playAlbum(album)\">'\n    + '     <i class=\"fa fa-play\"></i>'\n    + '   </a>'\n    + '   &nbsp;'\n    + '   <a class=\"collection-overlay-button\">'\n    + '     <i class=\"fa fa-plus\"></i>'\n    + '   </a>'\n    + ' </div>'\n    + '</div>'\n    ;\n  return $(template);\n};\n\nvar updateCollectionView = function() {\n  var $collection = $(\".collection-container .row\");\n  $collection.empty();\n\n\n  for (var i = 0; i < 33; i++) {\n    var $newThumbnail = buildAlbumThumbnail();\n    $collection.append($newThumbnail);\n  }\n\n  var onHover = function(event) {\n    $(this).append(buildAlbumOverlay(\"/album.html\"));\n  };\n\n  $collection.find('collection-album-image-container').hover(onHover);\n};\n\n  var offHover = function(event) {\n    $(this).find('.collection-album-image-overlay').remove();\n  };\n\n    $collection.find('.collection-album-image-container').hover(onHover, offHover);\n\n\nif (document.URL.match(/\\/collection.html/)) {\n  \n  $(document).ready(function() {\n    \n    updateCollectionView();\n    });\n  }","$(document).ready(function() {\n\t$('.hero-content h3').click(function(){\n\t\tvar subText = $(this).text();\n\t\t$(this).text(subText + \"!\")\n\t});\n\n\tvar onHoverAction = function(event) {\n\t\tconsole.log('Hover action triggered.');\n\t\t$(this).animate({'margin-top': '10px'});\n\t};\n\n\tvar offHoverAction = function(event) {\n\t\tconsole.log('Off-hover action triggered.');\n\t\t$(this).animate({'margin-top': '0px'});\n\t};\n\n\t$('.selling-points .point').hover(onHoverAction, offHoverAction);\n    \n    \n});","var tabsContainer = \".user-profile-tabs-container\";\nvar selectTabHandler = function(event) {\n  $tab = $(this);\n  $(tabsContainer + \" li\").removeClass('active');\n  $tab.parent().addClass('active');\n  selectedTabName = $tab.attr('href');\n  console.log(selectedTabName);\n  $(\".tab-pane\").addClass('hidden');\n  $(selectedTabName).removeClass('hidden');\n  event.preventDefault();\n};\n \n if (document.URL.match(/\\/profile.html/)) {\n   $(document).ready(function() {\n     var $tabs = $(tabsContainer + \" a\");\n     $tabs.click(selectTabHandler);\n     $tabs[0].click();\n   });\n }"]}